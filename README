File:mass-email-delivery-code/README
Author: Naomi Fox <naomi.fox@gmail.com>
Date: Dec 8, 2011, Januar 22, 2011

= Description =
Set of files for submitting form-based emails to members of congress.

To get a copy of this code:
 git clone git://github.com/naomifox/mass-email-delivery-code.git

= Dependencies =
== Webpy ==
 
 git clone git://github.com/webpy/webpy.git
 cd mass-email-delivery-code 
 ln -s ../webpy/web .

== BeautifulSoup ==
 sudo easy_install BeautifulSoup 

== ClientForm ==
 sudo easy_install ClientForm

= Testing =

To run unittests:
 python TestWriteYourRep.py

To run on one senator:
  python WriteYourRep.py stest senator - example: stest boxer

To run for one district:
 python WriteYourRep.py htest dist - example: stest MA-01

To run test over all senators:
 python main.py stest

To run test over all reps:
 python main.py htest

= Delivering emails for a large number of signers in a form =

(1) Download data as a csv from the blue state digital site or Action Kit.

(2) Create a new main module to parse your CSV file.  See EmailHouseFromCSV-FFTF.py as an example.

(3) Create an Amazon Web Services account: http://aws.amazon.com/

(4) Set up an EC2 spot instance (be sure to choose one with more memory, and not the micro).  
With the 64 big Amazon Linux m1.xlarge (8 ECUs, 4 Cores, 15 G memory), we are able to send > 10,000 emails per hour.

(5) Launch the EC2 instance, scp data over and install the code and dependencies (follow installation instructions above).
For Amazon Linux, you must install git first: sudo yum install git

(6) Connect to your EC2 instance via ssh.  Split up your csv file into smaller chunks using the unix split command.  
For example, "split -l 5000 my-data.csv" will split my-data.csv file into smaller files, each with 5000 lines each.  Be careful how you choose to split your file since you may have line breaks in your csv row.

(7) Start multiple jobs.
    	  rm runAll.sh
    	  for f in x??; do echo "python mymain.py $f $f.stat > $f.stdout 2> $f.stderr &" >> runAll.sh; done
    Start a screen session, so you can log out and the jobs will continue to run.	
    	  screen   
    	  /bin/sh runAll.sh
    	  Ctrl-a Ctrl-d

    To reattach to the screen later:
       screen -r

You can monitor how many emails have been sent out by doing a line count on your status file.
    wc -l data/*stat

= Updating =

When a member changes, or the url to the contact page changes, local data files need to be updates.

To update the senate contact data, retrieve this file:
http://www.senate.gov/general/contact_information/senators_cfm.xml

Test the contact links by running:
python main.py stest

Then view the file senate_test_out.txt for failures.  Attempt to find the correct contact links for those that failed and update senators_cfm.xml

To update the house contact data, retrieve this file:
http://www.contactingthecongress.org/downloads/ContactingCongress.db.txt

Test contact links and update as needed:
python main.py htest